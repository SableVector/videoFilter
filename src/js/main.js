/*
(i) Код попадает в итоговый файл,
только когда вызвана функция,
например flsFunctions.spollers();
Или когда импортирован весь файл,
например import "files/script.js";
Неиспользуемый (не вызванный)
код в итоговый файл не попадает.

Если мы хотим добавить модуль
следует его расскоментировать
*/

// Включить/выключить FLS (Full Logging System) (в работе)
// window['FLS'] = true;

import * as modules from "./modules/modules.js";
import * as funct from "./modules/functions.js";

// Подключение кастомного Select ================================================
// import './modules/select.js';

// Проверка на поддержку Webp формата изображения браузером и присвоение HTML-тегу класса webp или no-webp
funct.isWebp();

// Подключение плагина Swiper и настройка выполняються в файле js/libs/slider.js
// Для установки плагина в терминале прописать npm install swiper;
// Документация слайдера: https://swiperjs.com/
// Сниппет(HTML): swiper
// Подключенние слайдера Swiper выполняеться из node_modeles
// funct.swiper();

// Подключение плагина Tippy.js и настройка выполняються в файле js/libs/tippy.js
// Документация плагина: https://github.com/atomiks/tippyjs
// Для установки плагина в терминале прописать npm i tippy.js;
// Для начала работы плагина, нужно прописать data- атрибут нужному HTML-тегу: data-tippy-content="Подсказка №1"
// Снипет(html): tip(добавляет атрибут с подсказкой для htmk тега);
// Подключенние слайдера Tippy выполняеться из node_modeles
// funct.tippy();

// Подключение Спойлера ===========================================================
/*
	Для роителя спойлеров пишем атрибут data-spollers
	для заголовков спойлеров пишем атрибут data-spoller
	Если нужно включать\выкючать работу спойлеров на разных размерах экранов
	пишем параметры ширины и типа брейкпоинтов.
	Например:
	data-spollers = "992,max" - спойлеры будут работать только на экранах меньше или равно 992px
	data-spollers = "768,min" - спойлеры будут работать только на экранах больше или равно 768px

	Если нужно что бы в блоке открывался один спойлер добавляем атрибут data-one-spoller
*/
// funct.spoller();

// Подключение Динамического адаптива =============================================
// funct.dynamicAdapt();

// Подключение Бургер меню =======================================================
// funct.menuBurger();

// Подключение Звездного рейтинга ================================================
// funct.ratingStar();

// Подключение кастомного Табов ================================================
// funct.tabs();

// Подключение Таймера на странице ================================================
// funct.timer();

// Подключение Валидации форм на странице ================================================
/*
Подключение и настройка выполняеться в файле js/modules/forms.js
для Валидации формы нужно добавить дата атрибут самой форме data-form
для интпутов которые требуються для обезательного заполнение добавляем дата атрибут data-req
Снипет (html): form(в разработке)
*/
// funct.forms();


// Подключение модуля плавного скролла до объекта =============================================
// Для начала работы плагина, нужно прописать data- атрибут нужному HTML-тегу кнопки: data-smooth.
// funct.smoothScrolling();

// Подключение ползунка ================================================
/*
Подключение и настройка выполняеться в файле js/libs/range.js
Документация в шаблое
Документация плагина: https://refreshless.com/nouislider/
Снипет (html): range(в разработке)
	*/
// funct.rangeInit();

/* Динамический адаптив */
// Документация: https://template.fls.guru/template-docs/dinamicheskij-adaptiv.html
// funct.dynamicAdapt();
// ===================================================================================================================================
// Подключение модуля прилипающего меню =============================================
// Для начала работы плагина, нужно прописать data- атрибут нужному HTML-тегу кнопки: data-smooth.
// funct.headerSticy();
/* (В работе) Модуль работы с масками.*/
/*
Подключение и настройка выполняется в файле js/libs/inputmask.js
Для коректной работы плагина инпуту которому нужно прописать дата атрибут data-inputmask
Документация по работе в шаблоне:
Документация плагина: https://github.com/RobinHerbots/inputmask
Сниппет(HTML):
*/
// funct.inputMaskInit();

// Подключение кастомных скриптов
import "./modules/scripts.js";
